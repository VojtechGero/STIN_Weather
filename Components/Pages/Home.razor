@page "/"
@using STIN_Weather.WeatherReportUtils
@using STIN_Weather.Data
@using LeafletForBlazor
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>
<h1>Test</h1>
<MapView OnCoordinatesCreated="OnCoordinatesCreated" />
<div class="buttons">
    <button class="btn btn-primary" @onclick="showWeatherClick">Show weather:</button>
    <AuthorizeView>
        <div>
        <button class="btn btn-primary" @onclick="SaveLocationClick">Save location</button>
            <label>Name:</label>
            <input @bind="@text" @oninput="OnTextChangedAsync" />
        </div>
        
    </AuthorizeView>
</div>
@if (saved)
{
    <p>@message</p>
}

@if (showWeather)
{
    <WeatherRespose c="OutgoingCoords" />
}

@code{
    //https://github.com/ichim/LeafletForBlazor-NuGet
    bool showWeather { get; set; } = false;
    bool saved { get; set; } = false;
    Coordinates OutgoingCoords { get; set; }
    Coordinates Coords { get; set; }
    string message="";
    string text = "";
    async Task SaveLocationClick()
    {
        var x = new SavedLocation(Coords,text);
        message = $"Saved location {text} at coords:{Coords.latitude} {Coords.longitude}";
        saved = true;
    }
    async Task OnCoordinatesCreated(Coordinates IncomingCoords)
    {
        Coords = IncomingCoords;
    }
    async Task OnTextChangedAsync(ChangeEventArgs e)
    {
        text = e.Value.ToString();
    }
    void showWeatherClick()
    {
        OutgoingCoords = Coords;
        showWeather = true;
    }
}