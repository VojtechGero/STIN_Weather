name: Build, Test, Cover, and Deploy .NET Core (with Code Coverage)

on:
  push:
    branches:
      - master

env:
  AZURE_WEBAPP_NAME: STINWeather
  AZURE_WEBAPP_PACKAGE_PATH: .\published
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: .

jobs:
  build-and-test:
    runs-on: windows-latest
    strategy:
      matrix:
        # Consider adding more .NET versions if needed
        .NET: [dotnetcore-3.1, dotnet6, ${{ env.DOTNET_CORE_VERSION }}]
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.NET }}

      - name: Restore
        run: dotnet restore "${{ env.WORKING_DIRECTORY }}"

      - name: Build
        run: dotnet build "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Run tests with coverage (optional)
        run: dotnet test "${{ env.WORKING_DIRECTORY }}" --no-build --collect="XPlat Code Coverage" -v diag -- **/bin/Release/netcoreapp**.*.dll  # Adjust path if needed
        continue-on-error: true  # Allow build to continue even if tests fail (optional)

      - name: Calculate code coverage summary (optional)  # Requires OpenCover installed on runner
        if: ${{ success() && steps.run-tests-with-coverage.outputs != '' }}  # Run only if tests succeeded and coverage data is available
        run: dotnet report coverage -summary -directory ./coverage  # Adjust directory path if needed

      - name: Publish
        run: dotnet publish "${{ env.WORKING_DIRECTORY }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: webapp_${{ matrix.NET }}  # Include .NET version in artifact name for differentiation
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: windows-latest
    needs: build-and-test  # Ensure deployment runs only after build and test job completes

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: webapp_${{ needs.build-and-test.outputs.NET }}  # Download specific artifact based on .NET version
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.STINWeather_567B }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

